
person tracking using Python and the OpenCV library



import cv2

# Load the video capture object
cap = cv2.VideoCapture('video.mp4')

# Create the background subtractor object
fgbg = cv2.createBackgroundSubtractorMOG2()

# Set up the tracker object
tracker = cv2.TrackerCSRT_create()

# Loop through the video frames
while True:
    ret, frame = cap.read()
    if not ret:
        break
        
    # Apply the background subtraction algorithm
    fgmask = fgbg.apply(frame)
    
    # Find contours in the foreground mask
    contours, _ = cv2.findContours(fgmask, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
    
    # Loop through the contours and track any people detected
    for contour in contours:
        # Filter out small contours
        if cv2.contourArea(contour) < 1000:
            continue
        
        # Get the bounding box of the contour
        x, y, w, h = cv2.boundingRect(contour)
        
        # Initialize the tracker
        bbox = (x, y, w, h)
        tracker.init(frame, bbox)
        
        # Update the tracker for each subsequent frame
        ok, bbox = tracker.update(frame)
        if ok:
            # Draw the bounding box around the tracked object
            cv2.rectangle(frame, (int(bbox[0]), int(bbox[1])), 
                          (int(bbox[0] + bbox[2]), int(bbox[1] + bbox[3])), 
                          (0, 255, 0), 2)
    
    # Display the frame with the tracking overlay
    cv2.imshow('frame', frame)
    if cv2.waitKey(30) & 0xff == 27:
        break

# Release the video capture object and close all windows
cap.release()
cv2.destroyAllWindows()


#Note: run this code on a Python IDE such as PyCharm, Spyder, or Visual Studio Code. You will also need to have the OpenCV library installed on your system.
pip install opencv-python
